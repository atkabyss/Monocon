#include <xc.h>

#define _XTAL_FREQ 48000000

#define l0 LATBbits.LATB0			//左の７セグメントLED
#define l1 LATBbits.LATB1			//右の７セグメントLED
#define l7 LATDbits.LATD7			//クロック
#define YSW PORTEbits.RE0			//黄色タクトスイッチ
#define BSW PORTEbits.RE1			//茶タクトスイッチ
#define de __delay_ms				//ディレイ関数

//定数の宣言

char STMR[] ={0x08,0x04,0x02,0x01};
char STML[] ={0x01,0x02,0x04,0x08};

char l7s[] ={
	0b11000000,			//0
	0b11111001,			//1
	0b10100100,			//2
	0b10110000,			//3
	0b10011001,			//4
	0b10010010,			//5
	0b10000010,			//6
	0b11011000,			//7
	0b10000000,			//8
	0b10010000,			//9
	0b10001000,			//A---10
	0b10000011,			//b---11
	0b11000110,			//C---12
	0b10100001,			//d---13
	0b10000110,			//E---14
	0b10001110,			//F---15
	0b10101011,			//タクトスイッチOFF---16
	0b11110111,			//タクトスイッチON---17
	0b10011100,			//イルミネーションパターン１---18
	0b10100011,			//イルミネーションパターン２---19
};

//変数の宣言＆初期化
int a = 0,			//左の７セグメントLEDのデータ用
	b = 0,			//右の７セグメントLEDのデータ用
	c = 0,			//カウント用
	i = 0,			//ステッピングモータ制御用
	j = 300,			//イルミネーション速度変化用
	k = 0,			//イルミネーション初期状態用
	f = 0,			//フラグ用
	f2 = 0,			//フラグ用
	f3 = 0;			//フラグ用

//関数の宣言
void set(void);				//PICの初期化
void led(void);				//ダイナミックドライブ表示させる関数
void dcmr(void);			//dcモータを時計回りに回転させる関数
void dcml(void);			//dcモータを反時計回りに回転させる関数
void dcms(void);			//dcモータを停止させる関数
	
/*=============================
		メイン関数
=============================*/

void main(void){
	set();					//PICの初期化
	
	while(k == 0){
		LATD = l7s[18];
		l0 = 0;
		if(BSW == 0)f=1;
		if(BSW == 1 && f == 1)break;
	}
		
	f=0;
	while(1){				//永久ループ
		while(f2 == 0){
			for(c=0;c<j;c++){
				LATD = l7s[18];
				de(10);
				f2 = 1;
				if(YSW == 0)j=50;
				if(YSW == 1)j=100;
				if(BSW == 0)f = 1;
				if(BSW == 1 && f == 1){
					while(BSW == 1);
					de(10);
					while(BSW == 0)f=0;
				}
			}
		}
		
		while(f2 == 1){
			for(c=0;c<j;c++){
				LATD = l7s[18];
				l0 = 1;
				l1 = 0;
				de(10);
				f2 = 2;
				if(YSW == 0)j=50;
				if(YSW == 1)j=100;
				if(BSW == 0)f = 1;
				if(BSW == 1 && f == 1){
					while(BSW == 1);
					de(10);
					while(BSW == 0)f=0;
				}
			}
		}
		
		while(f2 == 2){
			for(c=0;c<j;c++){
				LATD = l7s[19];
				de(10);
				f2 = 3;
				if(YSW == 0)j=50;
				if(YSW == 1)j=100;
				if(BSW == 0)f = 1;
				if(BSW == 1 && f == 1){
					while(BSW == 1);
					de(10);
					while(BSW == 0)f=0;
				}
			}
		}
		
		while(f2 == 3){
			for(c=0;c<j;c++){
				LATD = l7s[19];
				l0 = 0;
				l1 = 1;
				de(10);
				f2 = 0;
				if(YSW == 0)j=50;
				if(YSW == 1)j=100;
				if(BSW == 1 && f == 1){
					while(BSW == 1);
					de(10);
					while(BSW == 0)f=0;
				}
			}
		}
	}
}

void set(void){						//PICの初期化
	ADCON1 |= 0x0F;					//ADコンバータOFF
	
	//入出力の設定
	TRISA = 0b00000111;
	TRISB = 0b00000000;
	TRISC = 0b00000111;
	TRISD = 0b00000000;
	TRISE = 0b00000111;
	
	//ポートの初期化
	PORTA = 0;
	PORTB = 0;
	PORTC = 0;
	PORTD = 0;
	PORTE = 0;
	
	//７セグメントLEDを消灯
	l0 = 1;
	l1 = 1;
}

void led(void){				//ダイナミックドライブ表示をさせる関数
	LATD = l7s[a];			//左の７セグメントLEDのデータを読み込み
	l0 = 0;					//左の７セグメントLEDを点灯
	l1 = 1;					//左の７セグメントLEDを消灯
	de(1);					//表示時間の確保
	
	LATD = l7s[b];			//右の７セグメントLEDのデータを読み込み
	l0 = 1;					//左の７セグメントLEDを消灯
	l1 = 0;					//左の７セグメントLEDを点灯
	de(1);					//表示時間の確保
}

void dcmr(void){				//dcモータを時計回りに回転させる関数
	LATD = 0b00010000;			//時計回りのデータを読み込み
	l7 = 0;
	l7 = 1;
	l7 = 0;
	de(1);						//1ms
}

void dcml(void){				//dcモータを反時計回りに回転させる関数
	LATD = 0b00100000;			//反時計回りのデータを読み込み
	l7 = 0;
	l7 = 1;
	l7 = 0;
	de(1);						//1ms
}
	
void dcms(){					//dcモータを停止させる関数
	LATD = 0b00110000;			//停止のデータを読み込み
	l7 = 0;
	l7 = 1;
	l7 = 0;
}