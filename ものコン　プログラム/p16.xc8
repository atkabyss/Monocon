#include <xc.h>

#define _XTAL_FREQ 48000000

#define l0 LATBbits.LATB0		//左の７セグメントLED
#define l1 LATBbits.LATB1		//右の７セグメントLED
#define BSW PORTEbits.RE2 		//黒タクトスイッチ
#define RSW PORTEbits.RE0		//赤タクトスイッチ
#define de __delay_ms			//遅延

//定数の宣言
char l7s[] ={
	0b11000000,
	0b11111001,
	0b10100100,
};

//変数の宣言
char a,b,c,d,i,j,k,f,f2;

//関数の宣言




void main(void){
	//入出力設定
	TRISA = 0b11000000;
	TRISB = 0b00000000;
	TRISC = 0b11111100;
	TRISD = 0b00000000;
	TRISE = 0b11111000;
	
	//ポートの初期化
	PORTA = 0;
	PORTB = 0;
	PORTC = 0;
	PORTD = 0;
	PORTE = 0;
	
	//７セグメントLEDの消灯
	l0 = 1;
	l1 = 1;
	
	//変数の初期化
	a = 0;		//左の７セグメント用
	b = 0;		//右の７セグメント用
	c = 0;		//カウント用
	i = 0;		//ステッピングモータ制御用
	j = 0;		//ステッピングモータの回転数制御用
	k = 0;		//for文用
	f = 0;		//フラグ用
	f2 = 0;		//フラグ用
	
	while(1){
		for(k=0;k<100;k++){		//１００回繰り返し
			LATD = l7s[a];		//左の７セグメントLEDのデータを読み込み
			l0 = 0;				//左の７セグメントLEDを表示
			l1 = 1;				//右の７セグメントLEDを消灯
			de(5);				//表示時間の確保
		
			LATD = l7s[b];		//右の７セグメントLEDのデータの読み込み
			l0 = 1;				//左の７セグメントLEDを消灯
			l1 = 0;				//右の７セグメントLEDを表示
			de(5);				//表示時間の確保
		}
		
		b++;					//カウントアップ
		if(b>15){				//bが１５より大きくなったら
			b=0;				//0に戻す
		}
		
	}
}

//自作関数
void led(void){		//ダイナミック点灯用の関数
	LATD = l7s[a];  //左のLEDのデータを読み込み
	l0 = 0;			//左のLEDを表示
	de(1);			//表示時間の確保
	l0 = 1;			//左のLEDを消灯
	LATD = l7s[b];	//右のLEDのデータを読み込み
	l1 = 0;			//右のLEDを表示
	de(1);			//表示時間の確保
	l1 = 1;			//右のLEDを消灯
}
	
	


