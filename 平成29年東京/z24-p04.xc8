/*=============================
平成２９年度 高校生ものづくりコンテスト
電子回路組み立て部門　東京都大会

作成日時　７月３１日
作成者　２４番　石井恭輔
所属学校　東京都立蔵前工業高等学校

ファイル名　p04.xc8
課題番号　課題4
=============================*/
#include<xc.h>

#define _XTAL_FREQ		48000000

#define l0 LATBbits.LATB0				//左の７セグメントLED
#define l1 LATBbits.LATB1				//右の７セグメントLED
#define YSW PORTEbits.RE2				//黄色タクトスイッチ
#define BSW PORTEbits.RE2				//青タクトスイッチ
#define de __delay_ms 					//ディレイ文

//定数の宣言
char STMR[] ={0x08,0x04,0x02,0x01};		//ステッピングモータを時計回りに回す関数
char STML[] ={0x01,0x02,0x04,0x08};		//ステッピングモータを反時計回りに回す関数

char l7s[] ={
	0b11000000,		//0
	0b11111001,		//1
	0b10100100,		//2
	0b10110000,		//3
	0b10011001,		//4
	0b10010010,		//5
	0b10000010,		//6
	0b11011000,		//7
	0b10000000,		//8
	0b10010000,		//9
	0b10001000,		//A---10
	0b10000011,		//b---11
	0b11000110,		//C---12
	0b10100001,		//d---13
	0b10000110,		//E---14
	0b10001110,		//F---15
	0b11000111,		//L---16
	0b10001001,		//H---17
};

//変数の宣言
char a,b,c,i,j,k,f,f2;

//関数の宣言
void led(void);					//LEDをダイナミック点灯させる関数
void led1(void);				//LEDに２９を表示させる関数
void led2(void);				//左の７セグメントLEDに２を点滅させる関数
void led3(void);				//右の７セグメントLEDに９を点滅させる関数

/*============================
			メイン関数
============================*/
void main(void){
	ADCON1 |= 0x0F;				//ADコンバータOFF
	
	//入出力の設定
	TRISA = 0b11000000;
	TRISB = 0b00000000;
	TRISC = 0b1111100;
	TRISD = 0b00000000;
	TRISE = 0b00000111;
	
	//ポートの初期化
	PORTA = 0;
	PORTB = 0;
	PORTC = 0;
	PORTD = 0;
	PORTE = 0;
	
	//すべての７セグメントLEDをOFF
	l0 = 1;
	l1 = 1;
	
	//変数の初期化
	a = 1;				//左の７セグメントLEDのデータ用
	b = 1;				//右の７セグメントLEDのデータ用
	c = 0;				//カウント用
	i = 0;				//ステッピングモータ制御用
	j = 0;				//ステッピングモータの回転数制御用
	k = 0;				//未使用
	f = 0;				//フラグ用
	f2 = 0;				//フラグ用
	
	//永久ループ
	while(1){
		led();
		
		if(BSW == 0)f=1;
		if(BSW == 1 && f == 1){
			f=0;
			
			b++;
		}
		
		if(b>15){
			b=0;
		}
	}
}


void led(void){			//LEDをダイナミック点灯させる関数
	LATD = l7s[a];		//左の７セグメントLEDのデータを読み込み
	l0 = 0;				//左の７セグメントLEDをON
	l1 = 1;				//右の７セグメントLEDをOFF
	de(1);				//表示時間の確保
	
	LATD = l7s[b];		//右の７セグメントLEDのデータを読み込み
	l0 = 1;				//左の７セグメントLEDをOFF
	l1 = 0;				//右の７セグメントLEDをON
	de(1);				//表示時間の確保
}

void led1(void){		//LEDに２９を表示させる関数
	LATD = l7s[a];		//左の７セグメントLEDのデータを読み込み
	l0 = 0;				//左の７セグメントLEDをON
	l1 = 1;				//右の７セグメントLEDをOFF
	de(1);				//表示時間の確保
	
	LATD = l7s[b];		//右の７セグメントLEDのデータを読み込み
	l0 = 1;				//左の７セグメントLEDをOFF
	l1 = 0;				//右の７セグメントLEDをON
	de(1);				//表示時間の確保
}

void led2(void){			//左の７セグメントLEDに２を点滅させる関数
	for(c=0;c<100;c++){		//１００回繰り返し
		LATD = 0b11111111;	//無表示
		l0 = 1;				//左の７セグメントLEDをOFF
		l1 = 1;				//右の７セグメントLEDをOFF
		de(10);				//10ms
		if(YSW == 1)break;	//黄色タクトスイッチがOFFになったら抜け出す
	}
	
	for(c=0;c<100;c++){		//１００回繰り返し
		LATD = l7s[a];		//左の７セグメントLEDのデータを読み込み
		l0 = 0;				//左の７セグメントLEDをON
		de(10);				//10ms
		if(YSW == 1)break;	//黄色タクトスイッチがOFFになったら抜け出す
	}
}

void led3(void){			//右の７セグメントLEDに９を点滅させる関数
	for(c=0;c<100;c++){		//１００回繰り返し
		LATD = 0b11111111;	//無表示
		l0 = 1;				//左の７セグメントLEDをOFF
		l1 = 1;				//右の７セグメントLEDをOFF
		de(10);				//10ms
		if(BSW == 1)break;	//青色タクトスイッチがOFFになったら抜け出す
	}
	
	for(c=0;c<100;c++){		//１００回繰り返し
		LATD = l7s[b];		//右の７セグメントLEDのデータを読み込み
		l1 = 0;				//右の７セグメントLEDをON
		de(10);				//１０ｍｓ
		if(BSW == 1)break;	//青色タクトスイッチがOFFになったら抜け出す
	}
}